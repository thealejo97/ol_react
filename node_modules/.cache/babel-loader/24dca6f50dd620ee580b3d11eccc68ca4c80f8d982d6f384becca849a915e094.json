{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\proyectos\\\\OL_React\\\\ol_react\\\\src\\\\pages\\\\MerchantFormPage\\\\MerchantFormPageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MerchantUpdatePageView from \"./MerchantUpdatePageView\";\nimport httpService from \"../../services/httpService\";\nimport { API_ENDPOINTS } from \"../../services/config\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MerchantUpdatePageContainer = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Obtiene el ID del comerciante\n  const navigate = useNavigate();\n  const [merchant, setMerchant] = useState({\n    businessName: \"\",\n    department: \"\",\n    city: \"\",\n    phone: \"\",\n    email: \"\",\n    registrationDate: \"\",\n    hasEstablishments: false\n  });\n  const [establishments, setEstablishments] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [totalIncomes, setTotalIncomes] = useState(0);\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  useEffect(() => {\n    const fetchMerchant = async () => {\n      try {\n        const data = await httpService(`${API_ENDPOINTS.MERCHANTS}/${id}`);\n        setMerchant({\n          ...data,\n          department: data.departmentId.toString(),\n          city: data.cityId.toString()\n        });\n      } catch (err) {\n        console.error(\"Error fetching merchant:\", err);\n      }\n    };\n    const fetchDepartmentsWithCities = async () => {\n      try {\n        const response = await httpService(API_ENDPOINTS.DEPARTMENTS);\n        setDepartments(response.content);\n      } catch (err) {\n        console.error(\"Error fetching departments:\", err);\n      }\n    };\n    fetchMerchant();\n    fetchDepartmentsWithCities();\n  }, [id]);\n  useEffect(() => {\n    if (merchant.department) {\n      const selectedDepartment = departments.find(dept => dept.id === parseInt(merchant.department, 10));\n      if (selectedDepartment) {\n        setCities(selectedDepartment.cities);\n      }\n    } else {\n      setCities([]);\n    }\n  }, [merchant.department, departments]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setMerchant({\n      ...merchant,\n      [name]: type === \"checkbox\" ? checked : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      businessName: merchant.businessName,\n      cityId: parseInt(merchant.city, 10),\n      departmentId: parseInt(merchant.department, 10),\n      phone: merchant.phone,\n      email: merchant.email\n    };\n    try {\n      await httpService(`${API_ENDPOINTS.MERCHANTS}/${id}`, \"PUT\", payload);\n      alert(\"Comerciante actualizado correctamente\");\n      navigate(\"/home\");\n    } catch (err) {\n      alert(\"Error actualizando comerciante\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MerchantUpdatePageView, {\n    merchant: merchant,\n    departments: departments,\n    cities: cities,\n    establishments: establishments,\n    totalIncomes: totalIncomes,\n    totalEmployees: totalEmployees,\n    onInputChange: handleInputChange,\n    onSubmit: handleSubmit,\n    handleNavigateMerchant: () => navigate(\"/merchant-form\"),\n    handleNavigateListMerchant: () => navigate(\"/home\")\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(MerchantUpdatePageContainer, \"oM3h+EgU2BrDkF6jrXLDoCoklUY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = MerchantUpdatePageContainer;\nexport default MerchantUpdatePageContainer;\nvar _c;\n$RefreshReg$(_c, \"MerchantUpdatePageContainer\");","map":{"version":3,"names":["React","useState","useEffect","MerchantUpdatePageView","httpService","API_ENDPOINTS","useNavigate","useParams","jsxDEV","_jsxDEV","MerchantUpdatePageContainer","_s","id","navigate","merchant","setMerchant","businessName","department","city","phone","email","registrationDate","hasEstablishments","establishments","setEstablishments","departments","setDepartments","cities","setCities","totalIncomes","setTotalIncomes","totalEmployees","setTotalEmployees","fetchMerchant","data","MERCHANTS","departmentId","toString","cityId","err","console","error","fetchDepartmentsWithCities","response","DEPARTMENTS","content","selectedDepartment","find","dept","parseInt","handleInputChange","e","name","value","type","checked","target","handleSubmit","preventDefault","payload","alert","onInputChange","onSubmit","handleNavigateMerchant","handleNavigateListMerchant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/proyectos/OL_React/ol_react/src/pages/MerchantFormPage/MerchantFormPageContainer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MerchantUpdatePageView from \"./MerchantUpdatePageView\";\r\nimport httpService from \"../../services/httpService\";\r\nimport { API_ENDPOINTS } from \"../../services/config\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst MerchantUpdatePageContainer = () => {\r\n  const { id } = useParams(); // Obtiene el ID del comerciante\r\n  const navigate = useNavigate();\r\n\r\n  const [merchant, setMerchant] = useState({\r\n    businessName: \"\",\r\n    department: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    registrationDate: \"\",\r\n    hasEstablishments: false,\r\n  });\r\n\r\n  const [establishments, setEstablishments] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [totalIncomes, setTotalIncomes] = useState(0);\r\n  const [totalEmployees, setTotalEmployees] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchMerchant = async () => {\r\n      try {\r\n        const data = await httpService(`${API_ENDPOINTS.MERCHANTS}/${id}`);\r\n        setMerchant({\r\n          ...data,\r\n          department: data.departmentId.toString(),\r\n          city: data.cityId.toString(),\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Error fetching merchant:\", err);\r\n      }\r\n    };\r\n\r\n    const fetchDepartmentsWithCities = async () => {\r\n      try {\r\n        const response = await httpService(API_ENDPOINTS.DEPARTMENTS);\r\n        setDepartments(response.content);\r\n      } catch (err) {\r\n        console.error(\"Error fetching departments:\", err);\r\n      }\r\n    };\r\n\r\n    fetchMerchant();\r\n    fetchDepartmentsWithCities();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (merchant.department) {\r\n      const selectedDepartment = departments.find(\r\n        (dept) => dept.id === parseInt(merchant.department, 10)\r\n      );\r\n      if (selectedDepartment) {\r\n        setCities(selectedDepartment.cities);\r\n      }\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  }, [merchant.department, departments]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setMerchant({\r\n      ...merchant,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const payload = {\r\n      businessName: merchant.businessName,\r\n      cityId: parseInt(merchant.city, 10),\r\n      departmentId: parseInt(merchant.department, 10),\r\n      phone: merchant.phone,\r\n      email: merchant.email,\r\n    };\r\n\r\n    try {\r\n      await httpService(`${API_ENDPOINTS.MERCHANTS}/${id}`, \"PUT\", payload);\r\n      alert(\"Comerciante actualizado correctamente\");\r\n      navigate(\"/home\");\r\n    } catch (err) {\r\n      alert(\"Error actualizando comerciante\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MerchantUpdatePageView\r\n      merchant={merchant}\r\n      departments={departments}\r\n      cities={cities}\r\n      establishments={establishments}\r\n      totalIncomes={totalIncomes}\r\n      totalEmployees={totalEmployees}\r\n      onInputChange={handleInputChange}\r\n      onSubmit={handleSubmit}\r\n      handleNavigateMerchant={() => navigate(\"/merchant-form\")}\r\n      handleNavigateListMerchant={() => navigate(\"/home\")}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MerchantUpdatePageContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}