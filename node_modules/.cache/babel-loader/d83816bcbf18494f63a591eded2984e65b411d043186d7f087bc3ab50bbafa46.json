{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Documents\\\\proyectos\\\\OL_React\\\\ol_react\\\\src\\\\pages\\\\LoginPage\\\\LoginPageContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport LoginPageView from \"./LoginPageView\"; // Importa la vista\nimport { login } from \"../../services/authService\"; // Servicio de autenticación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPageContainer() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!termsAccepted) {\n      setErrorMessage(\"Debes aceptar los términos y condiciones.\");\n      return;\n    }\n    try {\n      const token = await login(email, password); // Llamada al servicio\n      localStorage.setItem(\"authToken\", token); // Guarda el token JWT\n      alert(\"Inicio de sesión exitoso\");\n    } catch (error) {\n      setErrorMessage(\"Credenciales inválidas\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginPageView, {\n    email: email,\n    setEmail: setEmail,\n    password: password,\n    setPassword: setPassword,\n    termsAccepted: termsAccepted,\n    setTermsAccepted: setTermsAccepted,\n    errorMessage: errorMessage,\n    handleSubmit: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPageContainer, \"galEcw4SD3wSJKpOsk6pIUtgM2c=\");\n_c = LoginPageContainer;\nexport default LoginPageContainer;\nvar _c;\n$RefreshReg$(_c, \"LoginPageContainer\");","map":{"version":3,"names":["React","useState","LoginPageView","login","jsxDEV","_jsxDEV","LoginPageContainer","_s","email","setEmail","password","setPassword","termsAccepted","setTermsAccepted","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","token","localStorage","setItem","alert","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/usuario/Documents/proyectos/OL_React/ol_react/src/pages/LoginPage/LoginPageContainer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport LoginPageView from \"./LoginPageView\"; // Importa la vista\r\nimport { login } from \"../../services/authService\"; // Servicio de autenticación\r\n\r\nfunction LoginPageContainer() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [termsAccepted, setTermsAccepted] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!termsAccepted) {\r\n      setErrorMessage(\"Debes aceptar los términos y condiciones.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = await login(email, password); // Llamada al servicio\r\n      localStorage.setItem(\"authToken\", token); // Guarda el token JWT\r\n      alert(\"Inicio de sesión exitoso\");\r\n    } catch (error) {\r\n      setErrorMessage(\"Credenciales inválidas\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginPageView\r\n      email={email}\r\n      setEmail={setEmail}\r\n      password={password}\r\n      setPassword={setPassword}\r\n      termsAccepted={termsAccepted}\r\n      setTermsAccepted={setTermsAccepted}\r\n      errorMessage={errorMessage}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LoginPageContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAC7C,SAASC,KAAK,QAAQ,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,aAAa,EAAE;MAClBG,eAAe,CAAC,2CAA2C,CAAC;MAC5D;IACF;IAEA,IAAI;MACF,MAAMI,KAAK,GAAG,MAAMhB,KAAK,CAACK,KAAK,EAAEE,QAAQ,CAAC,CAAC,CAAC;MAC5CU,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEF,KAAK,CAAC,CAAC,CAAC;MAC1CG,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,eAAe,CAAC,wBAAwB,CAAC;IAC3C;EACF,CAAC;EAED,oBACEV,OAAA,CAACH,aAAa;IACZM,KAAK,EAAEA,KAAM;IACbC,QAAQ,EAAEA,QAAS;IACnBC,QAAQ,EAAEA,QAAS;IACnBC,WAAW,EAAEA,WAAY;IACzBC,aAAa,EAAEA,aAAc;IAC7BC,gBAAgB,EAAEA,gBAAiB;IACnCC,YAAY,EAAEA,YAAa;IAC3BE,YAAY,EAAEA;EAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEN;AAACpB,EAAA,CAnCQD,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AAqC3B,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}